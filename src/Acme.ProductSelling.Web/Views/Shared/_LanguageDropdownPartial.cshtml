@using Volo.Abp.Localization
@using Microsoft.Extensions.Options
@using System.Globalization
@inject ILanguageProvider LanguageProvider
@inject IOptions<AbpLocalizationOptions> LocalizationOptions
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    var languages = await LanguageProvider.GetLanguagesAsync();
    var currentLanguage = languages.FirstOrDefault(l => l.UiCultureName == CultureInfo.CurrentUICulture.Name);
    if (currentLanguage == null && languages.Any()) // Fallback
    {
        currentLanguage = languages.First(l => l.UiCultureName == CultureHelper.GetBaseCultureName(CultureInfo.CurrentUICulture.Name));
        if (currentLanguage == null) currentLanguage = languages.First();
    }
    var otherLanguages = languages.Where(l => currentLanguage == null || l.UiCultureName != currentLanguage.UiCultureName).ToList();

    // Lấy returnUrl
    var request = HttpContextAccessor.HttpContext.Request;
    var returnUrl = System.Net.WebUtility.UrlEncode(
        request.PathBase + request.Path + request.QueryString
    );
    if (string.IsNullOrWhiteSpace(returnUrl) || returnUrl == "%2F") // Nếu returnUrl rỗng hoặc chỉ là "/"
    {
        returnUrl = "%2F"; // Đảm bảo nó là root
    }
}


<div class="lpx-language-selection dropdown btn-language" data-lpx-language-selection="something">
    <div class="dropdown-toggle" role="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="gap:6px"> 
        <i class="lpx-icon bi bi-globe"></i>
        <span>@currentLanguage.CultureName</span>
    </div>

    <div class="dropdown-menu" aria-labelledby="languageDropdown">
        @foreach (var language in otherLanguages)
        {
            <a href="/Abp/Languages/Switch?culture=@(language.CultureName)&uiCulture=@(language.UiCultureName)&returnUrl=@returnUrl" class="dropdown-item" data-lpx-language-option="AR">@language.DisplayName</a>
        }
    </div>
</div>
