@page
@model Acme.ProductSelling.Web.Pages.Products.CreateModalModel
@using Acme.ProductSelling.Localization
@using Acme.ProductSelling.Categories
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal;
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Form;
@using Newtonsoft.Json
@inject IStringLocalizer<ProductSellingResource> L
@{
    Layout = null;
}

<form method="post" asp-page="/Admin/Products/CreateModal" id="createProductForm" enctype="multipart/form-data">
    <abp-modal size="ExtraLarge">
        <abp-modal-header title="@L["Product:CreateProduct"].Value"></abp-modal-header>
        <abp-modal-body>
            <abp-validation-summary />
            <abp-alert-list />

            <div class="form-container" id="productFormContainer">
                <!-- Basic Information Section -->
                <div class="basic-info-section">
                    <h5 class="mb-3 text-primary">Basic Information</h5>

                    <abp-input asp-for="Product.ProductName" />
                    <abp-input asp-for="Product.Description" type="textarea" rows="3" />

                    <div class="row">
                        <div class="col-md-6">
                            <abp-input asp-for="Product.OriginalPrice" type="number" step="any" />
                        </div>
                        <div class="col-md-6">
                            <abp-input asp-for="Product.DiscountPercent" type="number" step="any" min="0" max="100" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <abp-input asp-for="Product.DiscountedPrice" type="number" step="any" readonly="true" />
                        </div>
                        <div class="col-md-6">
                            <abp-input asp-for="Product.StockCount" type="number" />
                        </div>
                    </div>
                    <div class="mb-3 row align-items-center">
                        <label class="col-md-2 col-form-label">@L["Product:ImageSource"]</label>
                        <div class="col-md-3">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="imageSourceType" id="imageSourceUrl" value="url" checked="@(Model.Product?.ProductImageFile == null || Model.Product.ProductImageFile.Length == 0)">
                                <label class="form-check-label" for="imageSourceUrl">
                                    @L["Product:ImageUrlSource.Url"]
                                </label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="imageSourceType" id="imageSourceUpload" value="upload" checked="@(Model.Product?.ProductImageFile != null && Model.Product.ProductImageFile.Length > 0)">
                                <label class="form-check-label" for="imageSourceUpload">
                                    @L["Product:ImageUrlSource.Upload"]
                                </label>
                            </div>
                        </div>

                        <div class="col-md-7">
                            <div id="imageUrlInputContainer" style="@((Model.Product?.ProductImageFile == null || Model.Product.ProductImageFile.Length == 0) ? "display:block;" : "display:none;")">
                                <abp-input asp-for="Product.ImageUrl" label="" suppress-label="true" />
                            </div>

                            <div id="imageUploadInputContainer" style="@((Model.Product?.ProductImageFile != null && Model.Product.ProductImageFile.Length > 0) ? "display:block;" : "display:none;")">
                                <input class="form-control @(ViewData.ModelState.GetFieldValidationState("Product.ProductImageFile") == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "is-invalid" : "")"
                                       type="file" id="productImageFile" name="Product.ProductImageFile" accept="image/*">
                                <span asp-validation-for="Product.ProductImageFile" class="text-danger d-block"></span> @* d-block để lỗi xuống dòng *@
                            </div>
                        </div>
                    </div>

                    <div class="mb-3" id="imagePreviewContainer" style="display: none; text-align: center;">
                        <img id="imagePreview" src="#" alt="Image preview" style="max-height: 150px; max-width: 100%; border: 1px solid #ddd; padding: 5px; margin-top: 5px;" />
                    </div>
                   <abp-input asp-for="Product.UrlSlug" readonly="true"></abp-input>
                    <div class="row">
                        <div class="col-md-6">
                            <abp-select asp-for="Product.CategoryId"
                                        asp-items="Model.Categories"
                                        label="@L["Category"]" id="Product_CategoryId_Create" />
                        </div>
                        <div class="col-md-6">
                            <abp-select asp-for="Product.ManufacturerId"
                                        asp-items="Model.Manufacturers"
                                        label="@L["Manufacturer"]" />
                        </div>
                    </div>
                </div>

                <div class="specs-section" id="productSpecsSection" style="display: none;">
                    <h5 class="mb-3 text-secondary">Product Specifications</h5>

                    <div class="spec-form" id="spec-None" style="display:block;">
                        <div class="text-center text-muted py-4">
                            <i class="fas fa-info-circle fa-2x mb-2"></i>
                            <p>@L["NoSpecificSpecificationsForThisCategory"]</p>
                            <small>This category does not have specific specifications, or select a category first.</small>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-Monitor" style="display:none;">
                        <h6><i class="fas fa-desktop"></i> Monitor Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.MonitorSpecification.PanelType" />
                                <abp-input asp-for="Product.MonitorSpecification.ScreenSize" type="number" step="0.1" />
                                <abp-input asp-for="Product.MonitorSpecification.Resolution" />
                                <abp-input asp-for="Product.MonitorSpecification.RefreshRate" type="number" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.MonitorSpecification.ResponseTime" type="number" />
                                <abp-input asp-for="Product.MonitorSpecification.ColorGamut" />
                                <abp-input asp-for="Product.MonitorSpecification.Brightness" type="number" step="0.1" />
                                <abp-input asp-for="Product.MonitorSpecification.VesaMount" type="checkbox" />
                            </div>
                        </div>
                    </div>
                    <div class="spec-form" id="spec-Mouse" style="display:none;">
                        <h6><i class="fas fa-mouse"></i> Mouse Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.MouseSpecification.SensorType" />
                                <abp-input asp-for="Product.MouseSpecification.Dpi" type="number" />
                                <abp-input asp-for="Product.MouseSpecification.Color" />
                                <abp-input asp-for="Product.MouseSpecification.Weight" type="number" step="0.1" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.MouseSpecification.ButtonCount" type="number" />
                                <abp-input asp-for="Product.MouseSpecification.BacklightColor" type="text" />
                                <abp-input asp-for="Product.MouseSpecification.Connectivity" type="text" />
                                <abp-input asp-for="Product.MouseSpecification.PollingRate" type="number" step="1" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-Laptop" style="display:none;">
                        <h6><i class="fas fa-laptop"></i> Laptop Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.LaptopSpecification.Display" />
                                <abp-input asp-for="Product.LaptopSpecification.CPU" />
                                <abp-input asp-for="Product.LaptopSpecification.RAM" />
                                <abp-input asp-for="Product.LaptopSpecification.Storage" />
                                <abp-input asp-for="Product.LaptopSpecification.GraphicsCard" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.LaptopSpecification.BatteryLife" />
                                <abp-input asp-for="Product.LaptopSpecification.Warranty" type="date" />
                                <abp-input asp-for="Product.LaptopSpecification.OperatingSystem" />
                                <abp-input asp-for="Product.LaptopSpecification.Weight" type="number" step="0.01" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-CPU" style="display:none;">
                        <h6><i class="fas fa-microchip"></i> CPU Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.CpuSpecification.Socket" />
                                <abp-input asp-for="Product.CpuSpecification.CoreCount" type="number" />
                                <abp-input asp-for="Product.CpuSpecification.ThreadCount" type="number" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.CpuSpecification.BaseClock" type="number" step="0.1" />
                                <abp-input asp-for="Product.CpuSpecification.BoostClock" type="number" step="0.1" />
                                <abp-input asp-for="Product.CpuSpecification.Tdp" type="number" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-GPU" style="display:none;">
                        <h6><i class="fas fa-tv"></i> GPU Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.GpuSpecification.Chipset" />
                                <abp-input asp-for="Product.GpuSpecification.MemorySize" type="number" />
                                <abp-input asp-for="Product.GpuSpecification.MemoryType" />
                                <abp-input asp-for="Product.GpuSpecification.RecommendedPsu" type="number" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.GpuSpecification.BoostClock" type="number" />
                                <abp-input asp-for="Product.GpuSpecification.Length" type="number" step="0.1" />
                                <abp-input asp-for="Product.GpuSpecification.Interface" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-RAM" style="display:none;">
                        <h6><i class="fas fa-memory"></i> RAM Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.RamSpecification.Capacity" type="number" />
                                <abp-input asp-for="Product.RamSpecification.Speed" type="number" />
                                <abp-input asp-for="Product.RamSpecification.RamType" />
                                <abp-input asp-for="Product.RamSpecification.Voltage" type="number" step="0.01" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.RamSpecification.Timing" />
                                <abp-input asp-for="Product.RamSpecification.ModuleCount" type="number" />
                                <abp-input asp-for="Product.RamSpecification.HasRGB" type="checkbox" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-Motherboard" style="display:none;">
                        <h6><i class="fas fa-microchip"></i> Motherboard Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.MotherboardSpecification.Socket" />
                                <abp-input asp-for="Product.MotherboardSpecification.Chipset" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.MotherboardSpecification.FormFactor" />
                                <abp-input asp-for="Product.MotherboardSpecification.RamSlots" type="number" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-Storage" style="display:none;">
                        <h6><i class="fas fa-hdd"></i> Storage Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.StorageSpecification.StorageType" />
                                <abp-input asp-for="Product.StorageSpecification.Capacity" type="number" />
                                <abp-input asp-for="Product.StorageSpecification.Interface" />
                                <abp-input asp-for="Product.StorageSpecification.FormFactor" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.StorageSpecification.ReadSpeed" type="number" />
                                <abp-input asp-for="Product.StorageSpecification.WriteSpeed" type="number" />
                                <abp-input asp-for="Product.StorageSpecification.Rpm" type="number" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-PSU" style="display:none;">
                        <h6><i class="fas fa-plug"></i> PSU Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.PsuSpecification.Wattage" type="number" />
                                <abp-input asp-for="Product.PsuSpecification.EfficiencyRating" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.PsuSpecification.FormFactor" />
                                <abp-input asp-for="Product.PsuSpecification.Modularity" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-Case" style="display:none;">
                        <h6><i class="fas fa-cube"></i> Case Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.CaseSpecification.Color" />
                                <abp-input asp-for="Product.CaseSpecification.Material" />
                                <abp-input asp-for="Product.CaseSpecification.IncludedFans" type="number" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.CaseSpecification.SupportedMbFormFactor" />
                                <abp-input asp-for="Product.CaseSpecification.MaxGpuLength" type="number" step="0.1" />
                                <abp-input asp-for="Product.CaseSpecification.MaxCpuCoolerHeight" type="number" step="0.1" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-CPUCooler" style="display:none;">
                        <h6><i class="fas fa-fan"></i> CPU Cooler Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.CpuCoolerSpecification.CoolerType" />
                                <abp-input asp-for="Product.CpuCoolerSpecification.FanSize" type="number" />
                                <abp-input asp-for="Product.CpuCoolerSpecification.LedLighting" />
                                <abp-input asp-for="Product.CpuCoolerSpecification.TdpSupport" type="number" />
                                <abp-input asp-for="Product.CpuCoolerSpecification.Color" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.CpuCoolerSpecification.NoiseLevel" type="number" step="1" />
                                <abp-input asp-for="Product.CpuCoolerSpecification.SupportedSockets" />
                                <abp-input asp-for="Product.CpuCoolerSpecification.RadiatorSize" type="number" step="0.1" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-Keyboard" style="display:none;">
                        <h6><i class="fas fa-keyboard"></i> Keyboard Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.KeyboardSpecification.SwitchType" />
                                <abp-input asp-for="Product.KeyboardSpecification.Layout" />
                                <abp-input asp-for="Product.KeyboardSpecification.Backlight" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.KeyboardSpecification.Connectivity" />
                                <abp-input asp-for="Product.KeyboardSpecification.KeyboardType" />
                            </div>
                        </div>
                    </div>

                    <div class="spec-form" id="spec-Headset" style="display:none;">
                        <h6><i class="fas fa-headphones"></i> Headset Specifications</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <abp-input asp-for="Product.HeadsetSpecification.DriverSize" type="number" />
                                <abp-input asp-for="Product.HeadsetSpecification.Connectivity" />
                            </div>
                            <div class="col-md-6">
                                <abp-input asp-for="Product.HeadsetSpecification.HasMicrophone" type="checkbox" />
                                <abp-input asp-for="Product.HeadsetSpecification.IsNoiseCancelling" type="checkbox" />
                                <abp-input asp-for="Product.HeadsetSpecification.IsSurroundSound" type="checkbox" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </abp-modal-body>
        <abp-modal-footer buttons="@(AbpModalButtons.Cancel | AbpModalButtons.Save)"></abp-modal-footer>
    </abp-modal>
</form>

<style>
    .form-container {
        display: grid;
        gap: 20px;
    }

        .form-container.two-columns-layout {
            grid-template-columns: repeat(auto-fit, minmax(min(100%, 400px), 1fr));
        }

    .basic-info-section, .specs-section {
        padding: 15px;
        border: 1px solid #dee2e6;
        border-radius: .25rem;
        background-color: #f8f9fa;
    }

    .specs-section {
        background-color: #e9ecef;
    }

    #imageUrlInputContainer .mb-3 {
        margin-bottom: 0 !important;
    }
</style>
<script>
    $(function () { // Đợi DOM sẵn sàng

        var nameInput = $('#Product_ProductName');

        var slugInput = $('#Product_UrlSlug');

        if (nameInput.length && slugInput.length) {
            nameInput.on('input keyup', function () {
                var nameValue = $(this).val();
                var slugValue = generateSlug(nameValue);
                slugInput.val(slugValue);
            });

            // Tùy chọn: Nếu Name có giá trị sẵn (khi edit), tạo slug ngay khi load
            if (nameInput.val()) {
                 slugInput.val(generateSlug(nameInput.val()));
            }
        }

        function generateSlug(text) {
            if (!text) {
                return "";
            }

            text = text.replace(/Đ/g, 'D');
            text = text.replace(/đ/g, 'd');


            text = text.normalize('NFD').replace(/[\u0300-\u036f]/g, '');


            text = text.replace(/\s+/g, '-');

            text = text.replace(/[^\w-]+/g, '');

            text = text.toLowerCase();

            text = text.replace(/-+/g, '-');
            text = text.replace(/^-+|-+$/g, '');

            return text;
        }
    });
</script>
<script>
    (function () {
        const imageSourceUrlRadio = document.getElementById('imageSourceUrl');
        const imageSourceUploadRadio = document.getElementById('imageSourceUpload');
        const imageUrlInputContainer = document.getElementById('imageUrlInputContainer');
        const imageUploadInputContainer = document.getElementById('imageUploadInputContainer');
        const productImageFileInput = document.getElementById('productImageFile');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');
        const imagePreview = document.getElementById('imagePreview');
        const imageUrlInput = imageUrlInputContainer.querySelector("input[name='Product.ImageUrl']");

        function toggleImageInputFields() {
            if (imageSourceUrlRadio.checked) {
                imageUrlInputContainer.style.display = 'block';
                imageUploadInputContainer.style.display = 'none';

                if(imageUrlInput && imageUrlInput.value) {
                    imagePreview.src = imageUrlInput.value;
                    imagePreviewContainer.style.display = 'block';
                } else {
                    imagePreviewContainer.style.display = 'none';
                }
                productImageFileInput.value = '';
            } else {
                imageUrlInputContainer.style.display = 'none';
                imageUploadInputContainer.style.display = 'block';


                if (productImageFileInput.files && productImageFileInput.files[0]) {
                    displayImagePreview(productImageFileInput.files[0]);
                } else {
                    imagePreviewContainer.style.display = 'none';
                }
            }
        }

        function displayImagePreview(fileOrUrl) {
            if (typeof fileOrUrl === 'string') {
                imagePreview.src = fileOrUrl;
                imagePreviewContainer.style.display = 'block';
            } else {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreviewContainer.style.display = 'block';
                }
                reader.readAsDataURL(fileOrUrl);
            }
        }

        if (imageUrlInput) {
            imageUrlInput.addEventListener('input', function() {
                if (imageSourceUrlRadio.checked) {
                    if (this.value) {
                        displayImagePreview(this.value);
                    } else {
                         imagePreviewContainer.style.display = 'none';
                    }
                }
            });
        }

        if (imageSourceUrlRadio && imageSourceUploadRadio) {
            imageSourceUrlRadio.addEventListener('change', toggleImageInputFields);
            imageSourceUploadRadio.addEventListener('change', toggleImageInputFields);

            toggleImageInputFields();
        }

        if (productImageFileInput) {
            productImageFileInput.addEventListener('change', function (event) {
                if (this.files && this.files[0]) {
                    if (imageSourceUploadRadio.checked) {
                       displayImagePreview(this.files[0]);
                    }
                } else {
                    if (imageSourceUploadRadio.checked) {
                        imagePreviewContainer.style.display = 'none';
                    }
                }
            });
        }

        const categorySpecTypes = @Html.Raw(JsonConvert.SerializeObject(Model.CategorySpecTypesJson ?? new Dictionary<string, string>()));
        const categorySelect = document.getElementById("Product_CategoryId_Create");
        const formContainer = document.getElementById("productFormContainer");
        const specsSection = document.getElementById("productSpecsSection");
        const allSpecForms = specsSection.querySelectorAll(".spec-form");

        function showSpecForm(categoryId) {
            allSpecForms.forEach(form => {
                form.style.display = 'none';
                form.querySelectorAll('input, select, textarea').forEach(inputElement => {
                 inputElement.disabled = true;
                 });
            });

            if (!categoryId || categoryId === "" || categoryId === "00000000-0000-0000-0000-000000000000") {
                specsSection.style.display = 'none';
                formContainer.classList.remove('two-columns-layout');
                return;
            }

            specsSection.style.display = 'block';
            formContainer.classList.add('two-columns-layout');

            const specType = categorySpecTypes[categoryId.toString()];
            let specFormToShowId = "spec-None";

            if (specType) {
                const targetId = "spec-" + specType;
                if (specsSection.querySelector("#" + targetId)) {
                    specFormToShowId = targetId;
                } else {
                     console.warn("Spec form for type '" + specType + "' with ID '"
                     + targetId + "' not found. Falling back to 'spec-None'.");
                }
            } else {
                console.warn("No spec type found for category:", categoryId, ". Falling back to 'spec-None'.");
            }

            const formToDisplay = specsSection.querySelector("#" + specFormToShowId);
            if(formToDisplay) {
                formToDisplay.style.display = 'block';
                formToDisplay.querySelectorAll('input, select, textarea').forEach(inputElement => {
                    inputElement.disabled = false;
                });
            } else {
                console.error("Fallback spec form 'spec-None' not found!");
            }
        }

        if (categorySelect) {
            showSpecForm(categorySelect.value);
            categorySelect.addEventListener("change", function() {
                showSpecForm(this.value);
            });
        } else {
            console.error("Category select element 'Product_CategoryId_Create' not found.");
        }

        const originalPriceInput = document.querySelector("input[name='Product.OriginalPrice']");
        const discountPercentInput = document.querySelector("input[name='Product.DiscountPercent']");
        const discountedPriceInput = document.querySelector("input[name='Product.DiscountedPrice']");

        function calculateDiscountedPrice() {
            if (originalPriceInput && discountPercentInput && discountedPriceInput) {
                const originalPrice = parseFloat(originalPriceInput.value) || 0;
                let discountPercent = parseFloat(discountPercentInput.value) || 0;

                if (discountPercent < 0) {
                    discountPercentInput.value = 0;
                    discountPercent = 0;
                }
                if (discountPercent > 100) {
                    discountPercentInput.value = 100;
                    discountPercent = 100;
                }

                const discountedPrice = originalPrice * (1 - (discountPercent / 100));
                discountedPriceInput.value = discountedPrice.toFixed(2);
            }
        }

        if (originalPriceInput && discountPercentInput) {
            originalPriceInput.addEventListener('input', calculateDiscountedPrice);
            discountPercentInput.addEventListener('input', calculateDiscountedPrice);
            calculateDiscountedPrice();
        }
    })();
</script>