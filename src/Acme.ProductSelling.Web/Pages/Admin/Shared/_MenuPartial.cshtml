@using Volo.Abp.UI.Navigation
@model IEnumerable<ApplicationMenuItem>

@{
    var currentPath = ViewData["CurrentPath"] as string ?? "";
    var level = (int)(ViewData["Level"] ?? 1);

    Func<ApplicationMenuItem, string, bool> isMenuItemActive = 
        ViewData["IsActiveChecker"] as Func<ApplicationMenuItem, string, bool>;
}

@foreach (var menuItem in Model)
{
    var hasSubmenu = menuItem.Items.Any();
    
    var isBranchActive = hasSubmenu && isMenuItemActive(menuItem, currentPath);

    var isLinkActive = !string.IsNullOrEmpty(menuItem.Url) &&
                       currentPath.Equals(menuItem.Url.TrimEnd('/'), StringComparison.OrdinalIgnoreCase);

    var openClass = isBranchActive ? "open" : "";
    
    var activeLinkClass = isLinkActive ? "active" : "";
    
    <li class="menu-item @openClass" data-level="@level">
        @if (!hasSubmenu)
        {
            <a href="@menuItem.Url" class="menu-link @activeLinkClass" data-no-culture="true">
                <span>
                    @if (!string.IsNullOrEmpty(menuItem.Icon))
                    {
                        <i class="@menuItem.Icon"></i>
                    }
                    <span class="menu-text">@menuItem.DisplayName</span>
                </span>
            </a>
        }
        else // This item has a submenu
        {
            <div class="menu-link @(isBranchActive ? "active" : "")" onclick="toggleSubmenu(this)">
                <span>
                    @if (!string.IsNullOrEmpty(menuItem.Icon))
                    {
                        <i class="@menuItem.Icon"></i>
                    }
                    else
                    {
                        <i class="fas fa-layer-group"></i>
                    }
                    <span class="menu-text">@menuItem.DisplayName</span>
                </span>
                <i class="fas fa-chevron-down arrow-icon @(isBranchActive ? "rotated" : "")"></i>
            </div>

            <ul class="submenu @(isBranchActive ? "open" : "")">
                @{
                    var nextLevelViewData = new ViewDataDictionary(ViewData);
                    nextLevelViewData["Level"] = level + 1;
                }
                @await Html.PartialAsync("~/Pages/Admin/Shared/_MenuPartial.cshtml", menuItem.Items, nextLevelViewData) 
            </ul>
        }
    </li>
}