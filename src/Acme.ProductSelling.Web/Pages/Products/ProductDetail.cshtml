@page "/products/{Slug}"
@model Acme.ProductSelling.Web.Pages.Products.ProductDetailModel
@using Acme.ProductSelling.Categories
@using Acme.ProductSelling.Web.Helpers

@{
    ViewData["Title"] = Model.Product?.ProductName ?? L["Product:ProductDetail"];
    Layout = "/Views/Shared/_Layout.cshtml";
}
@section styles {
    <link href="~/css/global/products/detail.css" rel="stylesheet" />
}
@section scripts {
    <script>
        function toggleContent(id, button) {
            const container = document.getElementById(id);
            container.classList.toggle('expanded');
            button.classList.toggle('rotated');

            const showMoreText = button.querySelector('.show-more-text');
            const showLessText = button.querySelector('.show-less-text');

            if (showMoreText && showLessText) {
              showMoreText.classList.toggle('d-none');
              showLessText.classList.toggle('d-none');
            }
        }
        document.addEventListener('DOMContentLoaded', function () {
            const leftCard = document.getElementById('leftCard');
            const rightSidebar = document.getElementById('rightSidebar');

            if (leftCard && rightSidebar) {
                const height = leftCard.offsetHeight;
                rightSidebar.style.height = height + 'px';
            }
           const demoProducts = [
                {
                    id: '1',
                    name: 'AMD Ryzen 5 5600X',
                    imageUrl: 'https://placehold.co/200',
                    price: 4590000,
                    originalPrice: 5990000,
                    discountPercent: 23,
                    slug: 'amd-ryzen-5-5600x'
                },
                {
                    id: '2',
                    name: 'NVIDIA GeForce RTX 3060',
                    imageUrl: 'https://placehold.co/200',
                    price: 8490000,
                    originalPrice: 10990000,
                    discountPercent: 22,
                    slug: 'nvidia-geforce-rtx-3060'
                },
                {
                    id: '3',
                    name: 'Kingston HyperX DDR4 16GB',
                    imageUrl: 'https://placehold.co/200',
                    price: 1290000,
                    originalPrice: 1290000,
                    discountPercent: 0,
                    slug: 'kingston-hyperx-ddr4-16gb'
                },
                {
                    id: '4',
                    name: 'Samsung 970 EVO Plus 1TB',
                    imageUrl: 'https://placehold.co/200',
                    price: 2590000,
                    originalPrice: 3190000,
                    discountPercent: 19,
                    slug: 'samsung-970-evo-plus-1tb'
                }
            ];

            // Populate recently viewed products carousel with demo data
            const recentProductsContainer = document.getElementById('recentProductsRow');
            if (recentProductsContainer) {
                demoProducts.forEach(product => {
                    const productCol = document.createElement('div');
                    productCol.className = 'col-md-3 col-6 mb-3';

                    productCol.innerHTML = `
                        <a href="/products/${product.slug}" class="text-decoration-none">
                            <div class="viewed-product-card position-relative">
                                ${product.discountPercent > 0 ?
                                  `<span class="viewed-product-discount">-${product.discountPercent}%</span>` : ''}
                                <div class="viewed-product-img">
                                    <img src="${product.imageUrl}" alt="${product.name}" class="img-fluid">
                                </div>
                                <div class="viewed-product-info">
                                    <h6 class="viewed-product-title">${product.name}</h6>
                                    ${product.discountPercent > 0 ?
                                      `<span class="viewed-product-original-price">${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.originalPrice)}</span>` : ''}
                                    <span class="viewed-product-price">${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.price)}</span>
                                </div>
                            </div>
                        </a>
                    `;

                    recentProductsContainer.appendChild(productCol);
                });
            }
        });

    </script>

}


@if (Model.Product != null)
{
    <div class="container mt-4 mb-4">
        <div class="bg-white p-4 rounded">
            <div class="row">
                <div class="col-md-7 text-center">
                    @if (!string.IsNullOrWhiteSpace(Model.Product.ImageUrl))
                    {
                        <img src="@(await HelperMethods.IsImageUrlValidAsync(Model.Product.ImageUrl) ? Model.Product.ImageUrl : $"https://placehold.co/80x80?text={Model.Product.ProductName.Substring(0, 1)}")"
                             class="img-fluid rounded border" style="max-width: 250px;" alt="@Model.Product.ProductName">
                    }
                    else
                    {
                        <div class="text-center p-5 border rounded bg-light" style="max-width: 250px; margin: auto;">
                            <i class="fas fa-image fa-5x text-secondary"></i>
                        </div>
                    }
                </div>
                <div class="col-md-5">
                    <h2>@Model.Product.ProductName</h2>
                    <p class="text-muted">@L["Product:Manufacturer"]: @Model.Product.ManufacturerName</p>

                    @if (Model.Product.DiscountPercent > 0)
                    {
                        <h3 class="text-muted text-decoration-line-through my-3">
                            @Model.Product.OriginalPrice.ToString("C0", CultureInfo.GetCultureInfo("vi-VN"))
                        </h3>
                        <h2 class="text-danger my-3">
                            @Model.Product.DiscountedPrice.Value.ToString("C0", CultureInfo.GetCultureInfo("vi-VN"))
                            <span class="badge rounded-pill bg-danger">
                                -@Model.Product.DiscountPercent.ToString("0")%
                            </span>
                        </h2>
                    }
                    else
                    {
                        <h3 class="text-danger my-3">
                            @Model.Product.OriginalPrice.ToString("C0", CultureInfo.GetCultureInfo("vi-VN"))
                        </h3>
                    }

                    <button class="btn btn-primary btn-lg add-to-cart-button"
                            data-product-id="@Model.Product.Id"
                            data-product-name="@Model.Product.ProductName"
                            data-product-price="@(Model.Product.DiscountedPrice ?? Model.Product.OriginalPrice)"
                            @(Model.Product.StockCount <= 0 ? "disabled" : "")>
                        <i class="fas fa-cart-plus me-2"></i>
                        @L[Model.Product.StockCount > 0 ? "Product:AddToCart" : "Product:OutOfStock"]
                    </button>
                </div>
            </div>
        </div>

        <!-- Separator -->
        <div class="row">
            <div class="col">
                <div class="separator-custom rounded"></div>
            </div>
        </div>


        <div class="row">
            <!-- Main content -->
            <div class="col-lg-8">
                <div class="card h-100" id="leftCard">
                    <div class="card-header bg-light"><h2>@L["Product:Specification"]</h2></div>
                    <div class="card-body">
                        <div class="content-container" id="content2">
                            @switch (Model.Product.CategorySpecificationType)
                            {
                                case SpecificationType.Monitor:
                                    @if (Model.Product.MonitorSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_MonitorSpecsPartial.cshtml" model="Model.Product.MonitorSpecification" />
                                    }
                                    break;
                                case SpecificationType.Mouse:
                                    @if (Model.Product.MouseSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_MouseSpecsPartial.cshtml" model="Model.Product.MouseSpecification" />
                                    }
                                    break;
                                case SpecificationType.CPU:
                                    @if (Model.Product.CpuSpecification != null)
                                    {

                                        <partial name="/Pages/Components/ProductSpecs/_CpuSpecsPartial.cshtml" model="Model.Product.CpuSpecification" />
                                    }
                                    else
                                    {
                                        <p> @Model.Product.CpuSpecification</p>
                                    }
                                    break;
                                case SpecificationType.GPU:
                                    @if (Model.Product.GpuSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_GpuSpecsPartial.cshtml" model="Model.Product.GpuSpecification" />
                                    }
                                    break;
                                case SpecificationType.RAM:
                                    @if (Model.Product.RamSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_RamSpecsPartial.cshtml" model="Model.Product.RamSpecification" />
                                    }
                                    break;
                                case SpecificationType.Motherboard:
                                    @if (Model.Product.MotherboardSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_MotherboardSpecsPartial.cshtml" model="Model.Product.MotherboardSpecification" />
                                    }
                                    break;
                                case SpecificationType.Storage:
                                    @if (Model.Product.StorageSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_StorageSpecsPartial.cshtml" model="Model.Product.StorageSpecification" />
                                    }
                                    break;
                                case SpecificationType.PSU:
                                    @if (Model.Product.PsuSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_PsuSpecsPartial.cshtml" model="Model.Product.PsuSpecification" />
                                    }
                                    break;
                                case SpecificationType.Case:
                                    @if (Model.Product.CaseSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_CaseSpecsPartial.cshtml" model="Model.Product.CaseSpecification" />
                                    }
                                    break;
                                case SpecificationType.CPUCooler:
                                    @if (Model.Product.CpuCoolerSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_CpuCoolerSpecsPartial.cshtml" model="Model.Product.CpuCoolerSpecification" />
                                    }
                                    break;
                                case SpecificationType.Keyboard:
                                    @if (Model.Product.KeyboardSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_KeyboardSpecsPartial.cshtml" model="Model.Product.KeyboardSpecification" />
                                    }
                                    break;
                                case SpecificationType.Headset:
                                    @if (Model.Product.HeadsetSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_HeadsetSpecsPartial.cshtml" model="Model.Product.HeadsetSpecification" />
                                    }
                                    break;
                                case SpecificationType.Laptop:
                                    @if (Model.Product.LaptopSpecification != null)
                                    {
                                        <partial name="/Pages/Components/ProductSpecs/_LaptopSpecsPartial.cshtml" model="Model.Product.LaptopSpecification" />
                                    }
                                    break;
                                default:
                                    <p>@L["Product:NoSpecificSpecifications"]</p>

                                    <p>@Model.Product.CategorySpecificationType</p>
                                    break;
                            }

                        </div>

                        <hr />
                        <button class="btn btn-sm btn-outline-primary toggle-button d-block mx-auto"
                                onclick="toggleContent('content2', this)">
                            <span class="show-more-text">@L["Expand"]</span>
                            <span class="show-less-text d-none">@L["Collapse"]</span>
                            <i class="bi bi-chevron-down ms-1"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <div class="sticky-sidebar shadow" id="rightSidebar">
                    <h5>Sticky Sidebar</h5>
                    <p>This sidebar stays visible while scrolling the expanded content on the left.</p>
                </div>
            </div>
        </div>

        <!-- Recently Viewed Products -->
        <div class="recently-viewed-section  mt-4">
            <div class="container">
                <h4 class="recently-viewed-title">@L["UI:RecentlyViewedProducts"]</h4>
                <div class="row" id="recentProductsRow">
                    <!-- Placeholder for demo products - will be populated by JavaScript -->
                </div>
            </div>
        </div>

    </div>
}
else
{
    <div class="alert alert-warning">@L["Product:ProductNotFound"]</div>
}