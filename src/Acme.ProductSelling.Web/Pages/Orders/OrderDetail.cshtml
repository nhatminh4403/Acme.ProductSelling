@page "/Orders/OrderDetail/{id:Guid}"
@using Acme.ProductSelling.Orders.Dtos
@model Acme.ProductSelling.Web.Pages.Orders.OrderDetailModel

@{
    ViewData["Title"] = L["UI:Titles:OrderDetails"];
    Layout = "/Views/Shared/_Layout.cshtml";
}
<div class="container mt-4">
    <abp-card>
        <abp-card-header>
            <abp-row>
                <abp-column size-md="_6">
                    <h2>@L["Order:OrderDetails"]</h2>
                </abp-column>
                <abp-column size-md="_6" class="text-end">
                    <a href="@Url.Page("/Orders/OrderHistory")" class="btn btn-secondary">
                        <i class="fa fa-arrow-left"></i> @L["Order:BackToOrderHistory"]
                    </a>
                </abp-column>
            </abp-row>
        </abp-card-header>
        <abp-card-body>
            @if (Model.Order != null)
            {
                <div class="row mb-4">
                    <div class="col-md-6">
                        <h4>@L["Order:OrderInformation"]</h4>
                        <table class="table table-borderless" style="table-layout: fixed;">
                            <tr>
                                <th>@L["Order:OrderNumber"]:</th>
                                <td>@Model.Order.OrderNumber</td>
                            </tr>
                            <tr>
                                <th>@L["Order:OrderDate"]:</th>
                                <td>@Model.Order.OrderDate.ToString("g")</td>
                            </tr>
                            <tr>
                                <th>@L["Order:OrderStatus"]:</th>
                                <td>
                                    <span class="badge bg-@(Model.GetOrderStatusBadgeClass(Model.Order.OrderStatusText))"
                                          id="orderStatusBadge">
                                        @L[Model.Order.OrderStatus.ToString()]
                                    </span>
                                </td>
                            </tr>
                            <tr>
                                <th>@L["Order:PaymentStatus"]:</th>
                                <td>
                                    <span class="badge bg-@(Model.GetPaymentStatusBadgeClass(Model.Order.PaymentStatusText))"
                                          id="paymentStatusBadge">
                                        @L[Model.Order.PaymentStatus.ToString()]
                                    </span>
                                </td>
                            </tr>
                            <tr>
                                <th>@L["Order:TotalAmount"]:</th>
                                <td>
                                    @(Model.Order.TotalAmount.ToString("C0", CultureInfo.GetCultureInfo("vi-VN")))
                                </td>
                            </tr>
                            <tr>
                                <th>@L["Order:PaymentMethod"]:</th>
                                <td>@L[$"PaymentMethod:{Model.Order.PaymentMethod}"]</td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h4>@L["Order:CustomerInformation"]</h4>
                        <table class="table table-borderless th-middle" style="table-layout: fixed;">
                            <tr>
                                <th>@L["Order:CustomerName"]:</th>
                                <td>@Model.Order.CustomerName</td>
                            </tr>

                            <tr>
                                <th>@L["Order:PhoneNumber"]:</th>
                                <td>@Model.Order.CustomerPhone</td>
                            </tr>
                            <tr>
                                <th>@L["Order:ShippingAddress"]:</th>
                                <td>@Model.Order.ShippingAddress</td>
                            </tr>
                        </table>
                        @if (Model.Order.OrderStatus == Acme.ProductSelling.Orders.OrderStatus.Placed)
                        {
                            <div id="cancelOrderContainer">
                                <div class="alert alert-info d-flex justify-content-between align-items-center">
                                    <span>@L["Order:YouCanCancel"]</span>
                                    <form method="post" asp-page-handler="Cancel"
                                          onsubmit="return confirm('@L["Order:AreYouSureYouWantToCancel"]')">
                                        <input type="hidden" name="orderId" value="@Model.Order.Id" />
                                        <button type="submit" class="btn btn-danger">
                                            <i class="fa fa-times"></i> @L["Order:Cancel"]
                                        </button>
                                    </form>
                                </div>
                            </div>

                        }
                    </div>
                </div>

                <h4>@L["Order:OrderItems"]</h4>
                <abp-table striped-rows="true">
                    <thead>
                        <tr>
                            <th>@L["Order:Product"]</th>
                            <th>@L["Order:UnitPrice"]</th>
                            <th>@L["Order:Quantity"]</th>
                            <th>@L["Order:Subtotal"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Order.OrderItems)
                        {
                            <tr>
                                <td>@item.ProductName</td>
                                <td>@item.Price.ToString("C0", CultureInfo.GetCultureInfo("vi-VN"))</td>
                                <td>@item.Quantity</td>
                                <td>
                                    @((item.Price * item.Quantity)
                                                                .ToString("C0", CultureInfo.GetCultureInfo("vi-VN")))
                                </td>
                            </tr>
                         }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3" class="text-end"><strong>@L["Order:Total"]:</strong></td>
                            <td><strong>@Model.Order.TotalAmount.ToString("C0", CultureInfo.GetCultureInfo("vi-VN"))</strong></td>
                        </tr>
                    </tfoot>
                </abp-table>

            }
            else
            {
                <div class="alert alert-warning">
                    @L["Order:OrderNotFound"]
                </div>
            }
        </abp-card-body>
    </abp-card>

    <abp-card class="mt-3">
        <abp-card-header>
            <abp-card-title>
                <i class="bi bi-clock-history me-2"></i>
                @L["Order:OrderHistory"]
            </abp-card-title>
        </abp-card-header>
        <abp-card-body>
            @if (Model.OrderHistory != null && Model.OrderHistory.Any())
            {
                <div class="timeline">
                    @foreach (var history in Model.OrderHistory)
                    {
                        <div class="timeline-item">
                            <div class="timeline-marker @GetHistoryMarkerClass(history)"></div>
                            <div class="timeline-content">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="mb-1">@history.ChangeDescription</h6>
                                        <p class="text-muted mb-1">
                                            <i class="bi bi-person me-1"></i>
                                            <strong>@history.ChangedBy</strong>
                                        </p>
                                        <p class="text-muted mb-1">
                                            <i class="bi bi-clock me-1"></i>
                                            @history.CreationTime.ToString("dd/MM/yyyy HH:mm:ss")
                                        </p>
                                    </div>
                                    <div class="text-end">
                                        @if (history.OldStatus != history.NewStatus)
                                        {
                                            <div class="mb-2">
                                                <small class="text-muted d-block">Order Status:</small>
                                                <span class="badge @Model.GetOrderStatusBadgeClass(history.OldStatus)">
                                                    @L[$"Enum:OrderStatus.{history.OldStatus}"]
                                                </span>
                                                <i class="bi bi-arrow-right mx-1"></i>
                                                <span class="badge @Model.GetOrderStatusBadgeClass(history.NewStatus)">
                                                    @L[$"Enum:OrderStatus.{history.NewStatus}"]
                                                </span>
                                            </div>
                                        }
                                        @if (history.OldPaymentStatus != history.NewPaymentStatus)
                                        {
                                            <div>
                                                <small class="text-muted d-block">Payment Status:</small>
                                                <span class="badge @Model.GetPaymentStatusBadgeClass(history.OldPaymentStatus)">
                                                    @L[$"Enum:PaymentStatus.{history.OldPaymentStatus}"]
                                                </span>
                                                <i class="bi bi-arrow-right mx-1"></i>
                                                <span class="badge @Model.GetPaymentStatusBadgeClass(history.NewPaymentStatus)">
                                                    @L[$"Enum:PaymentStatus.{history.NewPaymentStatus}"]
                                                </span>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    @L["Order:NoHistoryAvailable"]
                </div>
            }
        </abp-card-body>
    </abp-card>

</div>
@functions {
    // Helper để lấy class màu cho badge
    string GetPaymentMethodLocalization(string paymentMethod)
    {
        string localization = "Order:PaymentMethod:" + paymentMethod;
        return L[localization] ?? paymentMethod;
    }
    string GetHistoryMarkerClass(OrderHistoryDto history)
    {
        // Different colors based on the change type
        if (history.NewStatus == "Delivered")
            return "bg-success";
        if (history.NewStatus == "Shipped")
            return "bg-primary";
        if (history.NewStatus == "Cancelled")
            return "bg-danger";
        if (history.NewPaymentStatus == "Paid")
            return "bg-success";
        if (history.NewPaymentStatus == "Failed")
            return "bg-danger";

        return "bg-info";
    }
}
@section styles {
    <style>
        .th-middle th {
            vertical-align: middle !important;
        }
    </style>
    <link href="~/css/shared/order-timeline.css" rel="stylesheet" />
}
@section scripts {
    <abp-script-bundle name="Shared.Order.SignalR" />
}